/*
 * Simulador.java
 *
 * Created on 13 de julio de 2008, 08:45 AM
 */

package telnetapp;

import java.io.DataOutputStream;
import java.io.FilterOutputStream;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author  cjacuna
 */
public class Simulador extends javax.swing.JFrame implements Runnable{

    private boolean bStop = false;
    private ServerSocket serverSocket = null;
    private Socket clientSocket = null;
    private FilterOutputStream out = null;
    Thread server = null;
    /** Creates new form Simulador */
    public Simulador() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnStart = new javax.swing.JButton();
        btnStop = new javax.swing.JButton();

        setTitle("Simulador");
        setResizable(false);

        btnStart.setText("Start");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnStop.setText("Stop");
        btnStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnStop)
                    .addComponent(btnStart))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnStop)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void run() {
        try {
            serverSocket = new ServerSocket(23);
            clientSocket = serverSocket.accept();
            out = new DataOutputStream(clientSocket.getOutputStream());
            byte[] buffer = new byte[26];
            int i = 0;
            while(!bStop){
                buffer[0] = (byte)( 0x00FF & i);
                buffer[1] = (byte)( (0xFF00 & i) >> 8 );
                for( int iData = 2 ; iData < 26; iData++){
                    buffer[iData++] = (byte) ( 0x00FF & (i*10));
                    buffer[iData] = (byte)( (0xFF00 & (i*10)) >> 8);
                }
                out.write(buffer);
                out.write("\n".getBytes());
                out.flush();
                Thread.sleep(100);
                if( i == 30){
                    i = 0;
                }else{
                    i++;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }finally{
            try{
                if( serverSocket != null ){
                    serverSocket.close();
                }
            }catch(Exception e){
                e.printStackTrace();
            }
            try{
                if( clientSocket != null ){
                    clientSocket.close();
                }
            }catch(Exception e){
                e.printStackTrace();
            }        
        }
    }

private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
    if( server == null ) {
        bStop = false;
        server = new Thread(this);
        server.start();
        btnStart.setEnabled(false);
        btnStop.setEnabled(true);
    }
}//GEN-LAST:event_btnStartActionPerformed

private void btnStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopActionPerformed
    bStop = true;
    server = null;
    btnStart.setEnabled(true);
    btnStop.setEnabled(false);
}//GEN-LAST:event_btnStopActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnStop;
    // End of variables declaration//GEN-END:variables

}
